input：
1
0 0 3 0 0 2 0 4 1
4 0 1 9 0 0 0 2 6
0 0 0 4 0 0 9 0 0
0 3 0 0 0 0 5 1 8
0 5 9 0 0 0 2 6 0
2 1 4 0 0 0 0 9 0
0 0 7 0 0 8 0 0 0
1 8 0 0 0 9 4 0 7
9 6 0 7 0 0 1 0 0


利用深搜将81个格子填完，每行每列 每个小宫格都没有重复的数！


#include<iostream>
#include<string.h>
using namespace std;

int a[10][10];
void print()
{
    for(int i = 1;i <= 9;i++){
        for(int j = 1;j <= 9;j++){
            cout<<a[i][j]<<' ';
        }
        cout<<endl;
    }
    cout<<endl;
}

int check(int row,int col,int value)
{
    for(int j = 1;j <= 9 ;j++)
    {
        if(a[row][j] == value)
            return 0;
    }
    for(int i = 1;i <= 9;i++){
        if(a[i][col] == value)
            return 0;
    }
    int k = ((row+2)/3-1)*3 + 1,p = ((col+2)/3 -1)*3 + 1;
    for(int i = k;i<k+3;i++){
        for(int j = p;j<p+3;j++){
            if(a[i][j] == value)
                return 0;
        }
    }
    return 1;
}

void dfs(int m)
{
    int row,col;
    row = (m + 8)/ 9;
    if(m % 9 == 0)
        col = 9;
    else
        col = m % 9;
    if(m == 82)
    {
        print();//print the board
        return;
    }
    if(a[row][col] != 0)
        dfs(m+1);
    else
    {
        for(int i = 1;i <= 9;i++)
        {
            if(check(row,col,i))
            {
                a[row][col] = i;
                dfs(m+1);
                a[row][col] = 0;
            }
        }
    }
}

int main()
{
     for(int i = 1;i <= 9;i++){
        for(int j = 1;j <= 9;j++){
            cin>>a[i][j];
        }
    }
    cout<<endl<<endl;
    dfs(1);
    return 0;
}
